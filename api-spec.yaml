openapi: 3.0.0
info:
  title: Online Book Store API
  description: API documentation for the Online Book Store
  version: 1.0.0

servers:
  - url: http://localhost:8080/api
    description: Local development server

paths:
  /auth/login:
    post:
      summary: User Login
      description: Authenticates a user and returns a JWT token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  username:
                    type: string
        "401":
          description: Unauthorized - Invalid credentials

  /books:
    get:
      summary: Get all books
      description: Retrieves a list of all available books.
      tags:
        - Books
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of books retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    author:
                      type: string
                    price:
                      type: number
                    stock:
                      type: integer
        "403":
          description: Unauthorized - Token missing or invalid

    post:
      summary: Add a new book
      description: Adds a new book to the store (Admin Only).
      tags:
        - Books
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
      responses:
        "201":
          description: Book added successfully
        "403":
          description: Unauthorized - Admin access required

  /orders:
    post:
      summary: Place an order
      description: Allows a customer to place an order.
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                quantity:
                  type: integer
      responses:
        "201":
          description: Order placed successfully
        "400":
          description: Bad request - Invalid book ID or stock not available
        "403":
          description: Unauthorized - Token missing or invalid

    get:
      summary: View order history
      description: Retrieves the order history of the logged-in user.
      tags:
        - Orders
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Order history retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    orderId:
                      type: integer
                    bookTitle:
                      type: string
                    quantity:
                      type: integer
                    totalAmount:
                      type: number
        "403":
          description: Unauthorized - Token missing or invalid

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
